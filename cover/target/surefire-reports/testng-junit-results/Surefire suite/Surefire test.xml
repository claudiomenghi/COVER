<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="claudios-MacBook-Air.local" name="Surefire test" tests="177" failures="4" timestamp="28 Sep 2016 13:44:24 GMT" time="6.551" errors="0">
  <testcase name="testGetAlphabet on testGetAlphabet(MTSSynthesis.ar.dc.uba.model.language.LanguageTest)" time="0.016" classname="MTSSynthesis.ar.dc.uba.model.language.LanguageTest"/>
  <testcase name="testSimpleStarredModel on testSimpleStarredModel(MTSATests.controller.StarEnvTests)" time="0.026" classname="MTSATests.controller.StarEnvTests"/>
  <testcase name="testStateWithNoReqs on testStateWithNoReqs(MTSATests.controller.StarEnvTests)" time="0.054" classname="MTSATests.controller.StarEnvTests"/>
  <testcase name="testContainsObject on testContainsObject(MTSTools.ac.ic.doc.commons.collections.PowerSetTest)" time="0.003" classname="MTSTools.ac.ic.doc.commons.collections.PowerSetTest"/>
  <testcase name="testSize on testSize(MTSTools.ac.ic.doc.commons.collections.PowerSetTest)" time="0.001" classname="MTSTools.ac.ic.doc.commons.collections.PowerSetTest"/>
  <testcase name="testIterator on testIterator(MTSTools.ac.ic.doc.commons.collections.PowerSetTest)" time="0.025" classname="MTSTools.ac.ic.doc.commons.collections.PowerSetTest"/>
  <testcase name="testSimpleModelNonDetDifferentModalitiesWithLoops on testSimpleModelNonDetDifferentModalitiesWithLoops(MTSATests.ac.ic.doc.distribution.ComponentBuilderTest)" time="0.491" classname="MTSATests.ac.ic.doc.distribution.ComponentBuilderTest"/>
  <testcase name="testSimpleModelFullProjection on testSimpleModelFullProjection(MTSATests.ac.ic.doc.distribution.ComponentBuilderTest)" time="0.003" classname="MTSATests.ac.ic.doc.distribution.ComponentBuilderTest"/>
  <testcase name="testSimpleModelNonDetDifferentModalities on testSimpleModelNonDetDifferentModalities(MTSATests.ac.ic.doc.distribution.ComponentBuilderTest)" time="0.072" classname="MTSATests.ac.ic.doc.distribution.ComponentBuilderTest"/>
  <testcase name="testTwoMistmatches on testTwoMistmatches(MTSATests.ac.ic.doc.distribution.ComponentBuilderTest)" time="0.021" classname="MTSATests.ac.ic.doc.distribution.ComponentBuilderTest"/>
  <testcase name="testSimpleModelNonDetNonFullProjection on testSimpleModelNonDetNonFullProjection(MTSATests.ac.ic.doc.distribution.ComponentBuilderTest)" time="0.013" classname="MTSATests.ac.ic.doc.distribution.ComponentBuilderTest"/>
  <testcase name="testNonFullProjection on testNonFullProjection(MTSATests.ac.ic.doc.distribution.ComponentBuilderTest)" time="0.005" classname="MTSATests.ac.ic.doc.distribution.ComponentBuilderTest"/>
  <testcase name="testComponeBien on testComponeBien(MTSATests.mts.TopStatesTests)" time="0.429" classname="MTSATests.mts.TopStatesTests"/>
  <testcase name="testNoTopStates on testNoTopStates(MTSATests.mts.TopStatesTests)" time="0.068" classname="MTSATests.mts.TopStatesTests"/>
  <testcase name="testNotEmpty on testNotEmpty(MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest)" time="0.001" classname="MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest"/>
  <testcase name="testTwoAlphabet on testTwoAlphabet(MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest)" time="0.002" classname="MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest"/>
  <testcase name="testAnyAlphabetNotEmpty on testAnyAlphabetNotEmpty(MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest)" time="0.001" classname="MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest"/>
  <testcase name="testTwoAlphabetOneEmpty on testTwoAlphabetOneEmpty(MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest)" time="0.001" classname="MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest"/>
  <testcase name="testOneAlphabet on testOneAlphabet(MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest)" time="0.001" classname="MTSATests.ac.ic.doc.distribution.model.AlphabetDistributionTest"/>
  <testcase name="testAll on testAll(MTSATests.controller.MTSControllerSynthesisTests)" time="0.11" classname="MTSATests.controller.MTSControllerSynthesisTests"/>
  <testcase name="testNone on testNone(MTSATests.controller.MTSControllerSynthesisTests)" time="0.038" classname="MTSATests.controller.MTSControllerSynthesisTests"/>
  <testcase name="testSome on testSome(MTSATests.controller.MTSControllerSynthesisTests)" time="0.03" classname="MTSATests.controller.MTSControllerSynthesisTests"/>
  <testcase name="bgrPositiveExample on bgrPositiveExample(MTSSynthesis.controller.game.bgr.BGRGameSolverTest)" time="0.01" classname="MTSSynthesis.controller.game.bgr.BGRGameSolverTest"/>
  <testcase name="bgrEmptyBuchiExample on bgrEmptyBuchiExample(MTSSynthesis.controller.game.bgr.BGRGameSolverTest)" time="0.008" classname="MTSSynthesis.controller.game.bgr.BGRGameSolverTest"/>
  <testcase name="bgrNegativeExample on bgrNegativeExample(MTSSynthesis.controller.game.bgr.BGRGameSolverTest)" time="0.002" classname="MTSSynthesis.controller.game.bgr.BGRGameSolverTest"/>
  <testcase name="bgrEmptyGRExample on bgrEmptyGRExample(MTSSynthesis.controller.game.bgr.BGRGameSolverTest)" time="0.003" classname="MTSSynthesis.controller.game.bgr.BGRGameSolverTest"/>
  <testcase name="bgrNoGuaranteeExample on bgrNoGuaranteeExample(MTSSynthesis.controller.game.bgr.BGRGameSolverTest)" time="0.001" classname="MTSSynthesis.controller.game.bgr.BGRGameSolverTest"/>
  <testcase name="testAll on testAll(FSP2MTS.ac.ic.doc.mtstools.model.impl.PathBuilder2Test)" time="0.01" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.PathBuilder2Test"/>
  <testcase name="testReflexiveSilent on testReflexiveSilent(FSP2MTS.ac.ic.doc.mtstools.model.impl.PathBuilder2Test)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.PathBuilder2Test"/>
  <testcase name="testConcatenateLanguages on testConcatenateLanguages(MTSSynthesis.ar.dc.uba.util.LanguageUtilsTest)" time="0.002" classname="MTSSynthesis.ar.dc.uba.util.LanguageUtilsTest"/>
  <testcase name="test3States on test3States(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSDeterminiserTest)" time="0.01" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSDeterminiserTest"/>
  <testcase name="test2StepsToErrorState on test2StepsToErrorState(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSDeterminiserTest)" time="0.019" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSDeterminiserTest"/>
  <testcase name="testBuildAlphabetWithoutMaybeAndNotMaybe on testBuildAlphabetWithoutMaybeAndNotMaybe(FSP2MTS.ac.ic.doc.mtstools.MTSUtilsTest)" time="0.0" classname="FSP2MTS.ac.ic.doc.mtstools.MTSUtilsTest"/>
  <testcase name="testBuildAlphabetWithMaybeAndNotMaybe on testBuildAlphabetWithMaybeAndNotMaybe(FSP2MTS.ac.ic.doc.mtstools.MTSUtilsTest)" time="0.0" classname="FSP2MTS.ac.ic.doc.mtstools.MTSUtilsTest"/>
  <testcase name="testIsMTSRepresentation on testIsMTSRepresentation(FSP2MTS.ac.ic.doc.mtstools.MTSUtilsTest)" time="0.0" classname="FSP2MTS.ac.ic.doc.mtstools.MTSUtilsTest"/>
  <testcase name="testDoMaybe on testDoMaybe(FSP2MTS.ac.ic.doc.mtstools.MTSUtilsTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.MTSUtilsTest"/>
  <testcase name="test2StatesBisimulationWouldntMinimize on test2StatesBisimulationWouldntMinimize(FSP2MTS.ac.ic.doc.mtstools.model.impl.ClosureTraceInclusionTest)" time="0.101" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ClosureTraceInclusionTest"/>
  <testcase name="testSizeForGetAllTracesToStateSatisfyingPredicateNonDeterministicStates on testSizeForGetAllTracesToStateSatisfyingPredicateNonDeterministicStates(MTSATests.ac.ic.doc.mtstools.utils.MTSUtilsTest)" time="0.08" classname="MTSATests.ac.ic.doc.mtstools.utils.MTSUtilsTest"/>
  <testcase name="testTracesSatisfyPredicateFromGetAllTracesToStateSatisfyingPredicate on testTracesSatisfyPredicateFromGetAllTracesToStateSatisfyingPredicate(MTSATests.ac.ic.doc.mtstools.utils.MTSUtilsTest)" time="0.01" classname="MTSATests.ac.ic.doc.mtstools.utils.MTSUtilsTest"/>
  <testcase name="testGetATraceToAParticularState on testGetATraceToAParticularState(MTSATests.ac.ic.doc.mtstools.utils.MTSUtilsTest)" time="0.004" classname="MTSATests.ac.ic.doc.mtstools.utils.MTSUtilsTest"/>
  <testcase name="testIsEmpty on testIsEmpty(MTSATests.ac.ic.doc.mtstools.utils.MTSUtilsTest)" time="0.001" classname="MTSATests.ac.ic.doc.mtstools.utils.MTSUtilsTest"/>
  <testcase name="testEquals on testEquals(FSP2MTS.ac.ic.doc.mtstools.model.impl.CompositionStateTests)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.CompositionStateTests"/>
  <testcase name="testComponeConError on testComponeConError(FSP2MTS.ac.ic.doc.mtstools.model.impl.PlusCAAndCROperationTest)" time="0.021" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.PlusCAAndCROperationTest"/>
  <testcase name="testTomAndJerry on testTomAndJerry(MTSATests.controller.BasicTomAndJerryTest)" time="0.242" classname="MTSATests.controller.BasicTomAndJerryTest"/>
  <testcase name="testDistributionFeedbackOnFullAlphabetNotPresent on testDistributionFeedbackOnFullAlphabetNotPresent(MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest)" time="0.032" classname="MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest"/>
  <testcase name="testNonDeterminismFeedback on testNonDeterminismFeedback(MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest)" time="0.02" classname="MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest"/>
  <testcase name="testSimpleModelNonDetDifferentModalities on testSimpleModelNonDetDifferentModalities(MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest)" time="0.009" classname="MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest"/>
  <testcase name="testComplexModelDifferentModalities on testComplexModelDifferentModalities(MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest)" time="0.002" classname="MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest"/>
  <testcase name="testDistributionFeedbackOnFullAlphabetPresent on testDistributionFeedbackOnFullAlphabetPresent(MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest)" time="0.001" classname="MTSATests.ac.ic.doc.distribution.DistributionAlgorithmTest"/>
  <testcase name="testCanonicalSymbolEquals on testCanonicalSymbolEquals(MTSSynthesis.ar.dc.uba.model.language.CanonicalSymbolTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.model.language.CanonicalSymbolTest"/>
  <testcase name="testCanonicalSymbolNotEquals on testCanonicalSymbolNotEquals(MTSSynthesis.ar.dc.uba.model.language.CanonicalSymbolTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.model.language.CanonicalSymbolTest"/>
  <testcase name="testParseAlphabet on testParseAlphabet(MTSSynthesis.ar.dc.uba.parser.AlphabetParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.AlphabetParserTest"/>
  <testcase name="testParseSingletonAlphabet on testParseSingletonAlphabet(MTSSynthesis.ar.dc.uba.parser.AlphabetParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.AlphabetParserTest"/>
  <testcase name="testAll on testAll(FSP2MTS.ac.ic.doc.mtstools.model.impl.ClousurePathBuilderTest)" time="0.007" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ClousurePathBuilderTest"/>
  <testcase name="testPropertyInComposite on testPropertyInComposite(MTSATests.parser.testParserLabelTest)" time="0.041" classname="MTSATests.parser.testParserLabelTest"/>
  <testcase name="testRemoveOneTransitionWithOneOrphan on testRemoveOneTransitionWithOneOrphan(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSRemoveTransitionTests)" time="0.0" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSRemoveTransitionTests"/>
  <testcase name="testRemoveOneTransitionWithoutOrphans on testRemoveOneTransitionWithoutOrphans(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSRemoveTransitionTests)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSRemoveTransitionTests"/>
  <testcase name="testRemoveOneTransitionWithTwoOrphans on testRemoveOneTransitionWithTwoOrphans(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSRemoveTransitionTests)" time="0.0" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSRemoveTransitionTests"/>
  <testcase name="testMinimisaEjemploLibroModelChecking on testMinimisaEjemploLibroModelChecking(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMinimiserTest)" time="0.034" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMinimiserTest"/>
  <testcase name="testMinimisaEjemploPaper on testMinimisaEjemploPaper(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMinimiserTest)" time="0.023" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMinimiserTest"/>
  <testcase name="testMinimisaEjemploABCConEstadoFinalMaybe on testMinimisaEjemploABCConEstadoFinalMaybe(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMinimiserTest)" time="0.011" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMinimiserTest"/>
  <testcase name="testMinimisaEjemploABSimple on testMinimisaEjemploABSimple(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMinimiserTest)" time="0.009" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMinimiserTest"/>
  <testcase name="testCopy on testCopy(MTSSynthesis.ar.dc.uba.model.condition.ZetaFunctionTest)" time="0.004" classname="MTSSynthesis.ar.dc.uba.model.condition.ZetaFunctionTest"/>
  <testcase name="testFluentsEquals on testFluentsEquals(MTSSynthesis.ar.dc.uba.model.condition.ZetaFunctionTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.condition.ZetaFunctionTest"/>
  <testcase name="testEquals on testEquals(MTSSynthesis.ar.dc.uba.model.condition.ZetaFunctionTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.model.condition.ZetaFunctionTest"/>
  <testcase name="testCR on testCR(FSP2MTS.ac.ic.doc.mtstools.model.impl.PlusCROperatorTest)" time="0.011" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.PlusCROperatorTest"/>
  <testcase name="test1 on test1(FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest)" time="0.009" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest"/>
  <testcase name="test2 on test2(FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest)" time="0.002" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest"/>
  <testcase name="test3 on test3(FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest)" time="0.002" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest"/>
  <testcase name="test4 on test4(FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest"/>
  <testcase name="test5 on test5(FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest)" time="0.002" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest"/>
  <testcase name="test6 on test6(FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest"/>
  <testcase name="test7 on test7(FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest"/>
  <testcase name="test8 on test8(FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest)" time="0.002" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest"/>
  <testcase name="test9 on test9(FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.BranchingImplementationNotionTest"/>
  <testcase name="testParseWord on testParseWord(MTSSynthesis.ar.dc.uba.parser.WordParserTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.parser.WordParserTest"/>
  <testcase name="testParseSingletonWord on testParseSingletonWord(MTSSynthesis.ar.dc.uba.parser.WordParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.WordParserTest"/>
  <testcase name="testPropertyA on testPropertyA(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSPropertyTest)" time="0.063" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSPropertyTest"/>
  <testcase name="testServicesExampleForLegalControllers on testServicesExampleForLegalControllers(MTSATests.controller.ControlledDeterminisationTests)" time="0.003" classname="MTSATests.controller.ControlledDeterminisationTests">
    <failure type="java.io.FileNotFoundException" message="/Users/Claudio1/Documents/School/University/Postdoc/Software/COVER/MTSA/mtsa/maven-root/ltsa/dist/examples/2013-services-legal.lts (No such file or directory)">
      <![CDATA[java.io.FileNotFoundException: /Users/Claudio1/Documents/School/University/Postdoc/Software/COVER/MTSA/mtsa/maven-root/ltsa/dist/examples/2013-services-legal.lts (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at ltsa.ui.FileInput.<init>(FileInput.java:19)
	at MTSAClient.ac.ic.doc.mtsa.MTSCompiler.compileCompositeState(MTSCompiler.java:37)
	at MTSAClient.ac.ic.doc.mtsa.MTSCompiler.compileMTS(MTSCompiler.java:27)
	at MTSATests.controller.ControlledDeterminisationTests.testServicesExampleForLegalControllers(ControlledDeterminisationTests.java:31)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- testServicesExampleForLegalControllers on testServicesExampleForLegalControllers(MTSATests.controller.ControlledDeterminisationTests) -->
  <testcase name="testSimpleControlledDet on testSimpleControlledDet(MTSATests.controller.ControlledDeterminisationTests)" time="0.0" classname="MTSATests.controller.ControlledDeterminisationTests">
    <failure type="java.io.FileNotFoundException" message="/Users/Claudio1/Documents/School/University/Postdoc/Software/COVER/MTSA/mtsa/maven-root/ltsa/dist/examples/controlled-det-1.lts (No such file or directory)">
      <![CDATA[java.io.FileNotFoundException: /Users/Claudio1/Documents/School/University/Postdoc/Software/COVER/MTSA/mtsa/maven-root/ltsa/dist/examples/controlled-det-1.lts (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at ltsa.ui.FileInput.<init>(FileInput.java:19)
	at MTSAClient.ac.ic.doc.mtsa.MTSCompiler.compileCompositeState(MTSCompiler.java:37)
	at MTSAClient.ac.ic.doc.mtsa.MTSCompiler.compileMTS(MTSCompiler.java:27)
	at MTSATests.controller.ControlledDeterminisationTests.testSimpleControlledDet(ControlledDeterminisationTests.java:21)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- testSimpleControlledDet on testSimpleControlledDet(MTSATests.controller.ControlledDeterminisationTests) -->
  <testcase name="testAll on testAll(FSP2MTS.ac.ic.doc.mtstools.model.impl.PathBuilderTest)" time="0.026" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.PathBuilderTest"/>
  <testcase name="testReflexiveSilent on testReflexiveSilent(FSP2MTS.ac.ic.doc.mtstools.model.impl.PathBuilderTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.PathBuilderTest"/>
  <testcase name="testGetAcceptedMid on testGetAcceptedMid(MTSAEnactment.robot.CommandAcceptedMessageTest)" time="0.001" classname="MTSAEnactment.robot.CommandAcceptedMessageTest"/>
  <testcase name="testWriteData on testWriteData(MTSAEnactment.robot.CommandAcceptedMessageTest)" time="0.001" classname="MTSAEnactment.robot.CommandAcceptedMessageTest"/>
  <testcase name="testGetMessageLength on testGetMessageLength(MTSAEnactment.robot.CommandAcceptedMessageTest)" time="0.0" classname="MTSAEnactment.robot.CommandAcceptedMessageTest"/>
  <testcase name="testStartsWithTrue on testStartsWithTrue(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testReverseEmptyWord on testReverseEmptyWord(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testFirst on testFirst(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testStartsWithTrueSigletonWord on testStartsWithTrueSigletonWord(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testEmptyWord on testEmptyWord(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testNotEmptyWord on testNotEmptyWord(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testTailWord on testTailWord(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testWordLengthComparator on testWordLengthComparator(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testStartsWithEmptyWord on testStartsWithEmptyWord(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testStartsWithFalse on testStartsWithFalse(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testStartsWithFalseSingletonWord on testStartsWithFalseSingletonWord(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testReverseNonEmptyWord on testReverseNonEmptyWord(MTSSynthesis.ar.dc.uba.model.language.WordTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.language.WordTest"/>
  <testcase name="testMTSUnMTSAEstadoPorA on testMTSUnMTSAEstadoPorA(FSP2MTS.ac.ic.doc.mtstools.MTSToAutomataConverterTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.MTSToAutomataConverterTest"/>
  <testcase name="testExecuteCommand on testExecuteCommand(MTSAEnactment.robot.NXTRobotTest)" time="0.09" classname="MTSAEnactment.robot.NXTRobotTest"/>
  <testcase name="testDeadLockPathForDeadlockState on testDeadLockPathForDeadlockState(FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest)" time="0.003" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest"/>
  <testcase name="testDeadlockEmptyMTS on testDeadlockEmptyMTS(FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest)" time="0.081" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest"/>
  <testcase name="testDeadlockSimpleMTS on testDeadlockSimpleMTS(FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest)" time="0.037" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest"/>
  <testcase name="testSimpleDeadlock on testSimpleDeadlock(FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest"/>
  <testcase name="testRemoveTransitionsToDeadlock on testRemoveTransitionsToDeadlock(FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest)" time="0.002" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest"/>
  <testcase name="testDeadLockPathForOnlyMaybeOutgoing on testDeadLockPathForOnlyMaybeOutgoing(FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest"/>
  <testcase name="testDeadlockMaybeMTS on testDeadlockMaybeMTS(FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest"/>
  <testcase name="testComplicatedDeadLockPath on testComplicatedDeadLockPath(FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest)" time="0.04" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.DeadlockManipulatorTest"/>
  <testcase name="testConsistentes on testConsistentes(FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests)" time="0.056" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests"/>
  <testcase name="testSonWeakConsistentes on testSonWeakConsistentes(FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests)" time="0.091" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests"/>
  <testcase name="testWeakAlphabetConsistencyEmptySilentSet on testWeakAlphabetConsistencyEmptySilentSet(FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests)" time="0.12" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests"/>
  <testcase name="testConsistentesAlfabetosDistintos on testConsistentesAlfabetosDistintos(FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests)" time="0.01" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests"/>
  <testcase name="testConsistentesEjemploSebas on testConsistentesEjemploSebas(FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests)" time="0.003" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests"/>
  <testcase name="testCounterExampleWeakAlphabetCompleteness on testCounterExampleWeakAlphabetCompleteness(FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests)" time="0.004" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests"/>
  <testcase name="testSonConsistentes on testSonConsistentes(FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests)" time="0.078" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests"/>
  <testcase name="testCounterExampleWeakAlphabetConsistency on testCounterExampleWeakAlphabetConsistency(FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests)" time="0.007" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.ConsistencyTests"/>
  <testcase name="tetAdd on tetAdd(MTSTools.ac.ic.doc.commons.relations.HashNAryRelationTest)" time="0.002" classname="MTSTools.ac.ic.doc.commons.relations.HashNAryRelationTest"/>
  <testcase name="testPermissive1 on testPermissive1(MTSATests.controller.PermissiveControllerTests)" time="0.053" classname="MTSATests.controller.PermissiveControllerTests"/>
  <testcase name="testPermissive2 on testPermissive2(MTSATests.controller.PermissiveControllerTests)" time="0.058" classname="MTSATests.controller.PermissiveControllerTests"/>
  <testcase name="testNotPermissive1 on testNotPermissive1(MTSATests.controller.PermissiveControllerTests)" time="0.046" classname="MTSATests.controller.PermissiveControllerTests"/>
  <testcase name="testOnNonDeterministicMTSs on testOnNonDeterministicMTSs(MTSATests.ac.ic.doc.mtstools.model.predicates.HasNonDeterministicTransitionsPredicateTest)" time="0.0" classname="MTSATests.ac.ic.doc.mtstools.model.predicates.HasNonDeterministicTransitionsPredicateTest"/>
  <testcase name="testOnDeterministicMTSs on testOnDeterministicMTSs(MTSATests.ac.ic.doc.mtstools.model.predicates.HasNonDeterministicTransitionsPredicateTest)" time="0.0" classname="MTSATests.ac.ic.doc.mtstools.model.predicates.HasNonDeterministicTransitionsPredicateTest"/>
  <testcase name="testHasNonDetTransitionsFromState on testHasNonDetTransitionsFromState(MTSATests.ac.ic.doc.mtstools.model.predicates.HasNonDeterministicTransitionsPredicateTest)" time="0.0" classname="MTSATests.ac.ic.doc.mtstools.model.predicates.HasNonDeterministicTransitionsPredicateTest"/>
  <testcase name="testOnATrace on testOnATrace(MTSATests.ac.ic.doc.mtstools.model.predicates.HasNonDeterministicTransitionsPredicateTest)" time="0.0" classname="MTSATests.ac.ic.doc.mtstools.model.predicates.HasNonDeterministicTransitionsPredicateTest"/>
  <testcase name="test1 on test1(MTSATests.controller.NonDetControllerSynthesisTests)" time="0.086" classname="MTSATests.controller.NonDetControllerSynthesisTests"/>
  <testcase name="test2 on test2(MTSATests.controller.NonDetControllerSynthesisTests)" time="0.073" classname="MTSATests.controller.NonDetControllerSynthesisTests"/>
  <testcase name="test3 on test3(MTSATests.controller.NonDetControllerSynthesisTests)" time="0.109" classname="MTSATests.controller.NonDetControllerSynthesisTests"/>
  <testcase name="test4 on test4(MTSATests.controller.NonDetControllerSynthesisTests)" time="0.072" classname="MTSATests.controller.NonDetControllerSynthesisTests"/>
  <testcase name="test5 on test5(MTSATests.controller.NonDetControllerSynthesisTests)" time="0.047" classname="MTSATests.controller.NonDetControllerSynthesisTests"/>
  <testcase name="test6 on test6(MTSATests.controller.NonDetControllerSynthesisTests)" time="0.047" classname="MTSATests.controller.NonDetControllerSynthesisTests"/>
  <testcase name="testRemoveStates on testRemoveStates(FSP2MTS.ac.ic.doc.mtstools.model.impl.RemoveUnreachableStatesTest)" time="0.053" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.RemoveUnreachableStatesTest"/>
  <testcase name="testIsDeterministic on testIsDeterministic(MTSATests.ac.ic.doc.mtstools.model.predicates.IsDeterministicMTSPredicateTest)" time="0.001" classname="MTSATests.ac.ic.doc.mtstools.model.predicates.IsDeterministicMTSPredicateTest"/>
  <testcase name="testMergeC2 on testMergeC2(FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest)" time="0.034" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest"/>
  <testcase name="testMergeC3 on testMergeC3(FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest)" time="0.084" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest"/>
  <testcase name="testMergeC4 on testMergeC4(FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest)" time="0.038" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest"/>
  <testcase name="testMergeC5 on testMergeC5(FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest)" time="0.091" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest"/>
  <testcase name="testMerge0 on testMerge0(FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest)" time="0.077" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest"/>
  <testcase name="testMerge8 on testMerge8(FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest)" time="0.045" classname="FSP2MTS.ac.ic.doc.mtstools.model.operations.MergeBuilderTest"/>
  <testcase name="testEmptyWordNoObligations on testEmptyWordNoObligations(MTSSynthesis.ar.dc.uba.model.structure.SynthesisedStateEqualsTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.model.structure.SynthesisedStateEqualsTest"/>
  <testcase name="testBasic2StatesRefinement on testBasic2StatesRefinement(FSP2MTS.ac.ic.doc.mtstools.model.impl.RefinementBetweenStatesTest)" time="0.001" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.RefinementBetweenStatesTest"/>
  <testcase name="testCompositionFrom2MTS on testCompositionFrom2MTS(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSComposerTest)" time="0.004" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSComposerTest"/>
  <testcase name="testIntegerStrategyState on testIntegerStrategyState(MTSATests.controller.StrategyStateTests)" time="0.005" classname="MTSATests.controller.StrategyStateTests"/>
  <testcase name="testIntegerStrategyStateHashSet on testIntegerStrategyStateHashSet(MTSATests.controller.StrategyStateTests)" time="0.003" classname="MTSATests.controller.StrategyStateTests"/>
  <testcase name="testSymetricIntegerStrategyState on testSymetricIntegerStrategyState(MTSATests.controller.StrategyStateTests)" time="0.001" classname="MTSATests.controller.StrategyStateTests"/>
  <testcase name="testParseEmptySet on testParseEmptySet(MTSSynthesis.ar.dc.uba.parser.SetParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.SetParserTest"/>
  <testcase name="testParseMultipleElementsSet on testParseMultipleElementsSet(MTSSynthesis.ar.dc.uba.parser.SetParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.SetParserTest"/>
  <testcase name="testParseSet on testParseSet(MTSSynthesis.ar.dc.uba.parser.SetParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.SetParserTest"/>
  <testcase name="testParseSingletonSet on testParseSingletonSet(MTSSynthesis.ar.dc.uba.parser.SetParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.SetParserTest"/>
  <testcase name="testContainsObject on testContainsObject(MTSTools.ac.ic.doc.commons.relations.UniversalNAryRelationTest)" time="0.001" classname="MTSTools.ac.ic.doc.commons.relations.UniversalNAryRelationTest"/>
  <testcase name="testSize on testSize(MTSTools.ac.ic.doc.commons.relations.UniversalNAryRelationTest)" time="0.0" classname="MTSTools.ac.ic.doc.commons.relations.UniversalNAryRelationTest"/>
  <testcase name="testIterator on testIterator(MTSTools.ac.ic.doc.commons.relations.UniversalNAryRelationTest)" time="0.004" classname="MTSTools.ac.ic.doc.commons.relations.UniversalNAryRelationTest"/>
  <testcase name="testComponeMTSA on testComponeMTSA(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMultipleComposertMemoryAndTimeTest)" time="1.159" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSMultipleComposertMemoryAndTimeTest"/>
  <testcase name="testPropertyInCompositeWithOthersOperations on testPropertyInCompositeWithOthersOperations(MTSATests.parser.PropertyTests)" time="0.578" classname="MTSATests.parser.PropertyTests"/>
  <testcase name="testPropertyInComposite on testPropertyInComposite(MTSATests.parser.PropertyTests)" time="0.146" classname="MTSATests.parser.PropertyTests"/>
  <testcase name="testPropertyInCompositeWithAlotOfStates on testPropertyInCompositeWithAlotOfStates(MTSATests.parser.PropertyTests)" time="0.154" classname="MTSATests.parser.PropertyTests"/>
  <testcase name="testBuildProperty on testBuildProperty(MTSTools.ac.ic.doc.mtstools.model.operations.impl.MTSPropertyToBuchiConverterTest)" time="0.003" classname="MTSTools.ac.ic.doc.mtstools.model.operations.impl.MTSPropertyToBuchiConverterTest"/>
  <testcase name="testParseLanguageSingletonWord on testParseLanguageSingletonWord(MTSSynthesis.ar.dc.uba.parser.LanguageParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.LanguageParserTest"/>
  <testcase name="testParseSingletonLanguageSingletonWord on testParseSingletonLanguageSingletonWord(MTSSynthesis.ar.dc.uba.parser.LanguageParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.LanguageParserTest"/>
  <testcase name="testParseSingletonLanguageNonSingletonWord on testParseSingletonLanguageNonSingletonWord(MTSSynthesis.ar.dc.uba.parser.LanguageParserTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.parser.LanguageParserTest"/>
  <testcase name="testParseLanguageNonSingletonWord on testParseLanguageNonSingletonWord(MTSSynthesis.ar.dc.uba.parser.LanguageParserTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.parser.LanguageParserTest"/>
  <testcase name="testUnLTSenMTSAyEnLTSA on testUnLTSenMTSAyEnLTSA(FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSAvsLTSATest)" time="0.339" classname="FSP2MTS.ac.ic.doc.mtstools.model.impl.MTSAvsLTSATest"/>
  <testcase name="testAlphabetModelEqualsAlphabetDistribution on testAlphabetModelEqualsAlphabetDistribution(MTSATests.ac.ic.doc.distribution.DistributionTest)" time="0.002" classname="MTSATests.ac.ic.doc.distribution.DistributionTest"/>
  <testcase name="testSuffixes on testSuffixes(MTSSynthesis.ar.dc.uba.util.WordUtilsTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.util.WordUtilsTest"/>
  <testcase name="testFollows on testFollows(MTSSynthesis.ar.dc.uba.util.WordUtilsTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.util.WordUtilsTest"/>
  <testcase name="testPreffixes on testPreffixes(MTSSynthesis.ar.dc.uba.util.WordUtilsTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.util.WordUtilsTest"/>
  <testcase name="testFirsts on testFirsts(MTSSynthesis.ar.dc.uba.util.WordUtilsTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.util.WordUtilsTest"/>
  <testcase name="testLinearisationsOnlyInteractions on testLinearisationsOnlyInteractions(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.014" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
  <testcase name="testOrderNotImportantForConditionInstances on testOrderNotImportantForConditionInstances(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.003" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
  <testcase name="testLinearisationsWithInteractionsAndConditions on testLinearisationsWithInteractionsAndConditions(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
  <testcase name="testOrderNotImportantForConditionsInstances on testOrderNotImportantForConditionsInstances(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
  <testcase name="testTwoLinearisationsWithInteractionsAndConditionsA on testTwoLinearisationsWithInteractionsAndConditionsA(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.002" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest">
    <failure type="java.lang.AssertionError" message="expected:&amp;lt;[[User -&amp;gt; pwd -&amp;gt; ATM, ATM -&amp;gt; checkPwd -&amp;gt; Bank, Phi_1[Bank], Phi_2[ATM], Phi_3[User, ATM], Phi_4[Bank], ATM -&amp;gt; wait -&amp;gt; User, Bank -&amp;gt; doCheck -&amp;gt; Bank, Bank -&amp;gt; checkOk -&amp;gt; ATM, ATM -&amp;gt; ok -&amp;gt; User], [User -&amp;gt; pwd -&amp;gt; ATM, ATM -&amp;gt; checkPwd -&amp;gt; Bank, Phi_1[Bank], Phi_2[ATM], Phi_3[User, ATM], Phi_4[Bank], Bank -&amp;gt; doCheck -&amp;gt; Bank, ATM -&amp;gt; wait -&amp;gt; User, Bank -&amp;gt; checkOk -&amp;gt; ATM, ATM -&amp;gt; ok -&amp;gt; User]]&amp;gt; but was:&amp;lt;[[User -&amp;gt; pwd -&amp;gt; ATM, ATM -&amp;gt; checkPwd -&amp;gt; Bank, Phi_2[ATM], Phi_3[User, ATM], Phi_1[Bank], Phi_4[Bank], Bank -&amp;gt; doCheck -&amp;gt; Bank, ATM -&amp;gt; wait -&amp;gt; User, Bank -&amp;gt; checkOk -&amp;gt; ATM, ATM -&amp;gt; ok -&amp;gt; User], [User -&amp;gt; pwd -&amp;gt; ATM, ATM -&amp;gt; checkPwd -&amp;gt; Bank, Phi_2[ATM], Phi_3[User, ATM], Phi_1[Bank], Phi_4[Bank], ATM -&amp;gt; wait -&amp;gt; User, Bank -&amp;gt; doCheck -&amp;gt; Bank, Bank -&amp;gt; checkOk -&amp;gt; ATM, ATM -&amp;gt; ok -&amp;gt; User]]&amp;gt;">
      <![CDATA[java.lang.AssertionError: expected:<[[User -> pwd -> ATM, ATM -> checkPwd -> Bank, Phi_1[Bank], Phi_2[ATM], Phi_3[User, ATM], Phi_4[Bank], ATM -> wait -> User, Bank -> doCheck -> Bank, Bank -> checkOk -> ATM, ATM -> ok -> User], [User -> pwd -> ATM, ATM -> checkPwd -> Bank, Phi_1[Bank], Phi_2[ATM], Phi_3[User, ATM], Phi_4[Bank], Bank -> doCheck -> Bank, ATM -> wait -> User, Bank -> checkOk -> ATM, ATM -> ok -> User]]]]><![CDATA[> but was:<[[User -> pwd -> ATM, ATM -> checkPwd -> Bank, Phi_2[ATM], Phi_3[User, ATM], Phi_1[Bank], Phi_4[Bank], Bank -> doCheck -> Bank, ATM -> wait -> User, Bank -> checkOk -> ATM, ATM -> ok -> User], [User -> pwd -> ATM, ATM -> checkPwd -> Bank, Phi_2[ATM], Phi_3[User, ATM], Phi_1[Bank], Phi_4[Bank], ATM -> wait -> User, Bank -> doCheck -> Bank, Bank -> checkOk -> ATM, ATM -> ok -> User]]]]><![CDATA[>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at MTSSynthesis.ar.dc.uba.lsc.ChartTest.testTwoLinearisationsWithInteractionsAndConditionsA(ChartTest.java:430)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- testTwoLinearisationsWithInteractionsAndConditionsA on testTwoLinearisationsWithInteractionsAndConditionsA(MTSSynthesis.ar.dc.uba.lsc.ChartTest) -->
  <testcase name="testTwoLinearisationsWithInteractionsAndConditionsB on testTwoLinearisationsWithInteractionsAndConditionsB(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest">
    <failure type="java.lang.AssertionError" message="expected:&amp;lt;[[User -&amp;gt; pwd -&amp;gt; ATM, ATM -&amp;gt; checkPwd -&amp;gt; Bank, Phi_1[Bank], Phi_2[ATM], Phi_3[Bank, ATM], Bank -&amp;gt; doCheck -&amp;gt; Bank, ATM -&amp;gt; wait -&amp;gt; User, Bank -&amp;gt; checkOk -&amp;gt; ATM, ATM -&amp;gt; ok -&amp;gt; User], [User -&amp;gt; pwd -&amp;gt; ATM, ATM -&amp;gt; checkPwd -&amp;gt; Bank, Phi_1[Bank], Phi_2[ATM], Phi_3[Bank, ATM], ATM -&amp;gt; wait -&amp;gt; User, Bank -&amp;gt; doCheck -&amp;gt; Bank, Bank -&amp;gt; checkOk -&amp;gt; ATM, ATM -&amp;gt; ok -&amp;gt; User]]&amp;gt; but was:&amp;lt;[[User -&amp;gt; pwd -&amp;gt; ATM, ATM -&amp;gt; checkPwd -&amp;gt; Bank, Phi_2[ATM], Phi_1[Bank], Phi_3[Bank, ATM], ATM -&amp;gt; wait -&amp;gt; User, Bank -&amp;gt; doCheck -&amp;gt; Bank, Bank -&amp;gt; checkOk -&amp;gt; ATM, ATM -&amp;gt; ok -&amp;gt; User], [User -&amp;gt; pwd -&amp;gt; ATM, ATM -&amp;gt; checkPwd -&amp;gt; Bank, Phi_2[ATM], Phi_1[Bank], Phi_3[Bank, ATM], Bank -&amp;gt; doCheck -&amp;gt; Bank, ATM -&amp;gt; wait -&amp;gt; User, Bank -&amp;gt; checkOk -&amp;gt; ATM, ATM -&amp;gt; ok -&amp;gt; User]]&amp;gt;">
      <![CDATA[java.lang.AssertionError: expected:<[[User -> pwd -> ATM, ATM -> checkPwd -> Bank, Phi_1[Bank], Phi_2[ATM], Phi_3[Bank, ATM], Bank -> doCheck -> Bank, ATM -> wait -> User, Bank -> checkOk -> ATM, ATM -> ok -> User], [User -> pwd -> ATM, ATM -> checkPwd -> Bank, Phi_1[Bank], Phi_2[ATM], Phi_3[Bank, ATM], ATM -> wait -> User, Bank -> doCheck -> Bank, Bank -> checkOk -> ATM, ATM -> ok -> User]]]]><![CDATA[> but was:<[[User -> pwd -> ATM, ATM -> checkPwd -> Bank, Phi_2[ATM], Phi_1[Bank], Phi_3[Bank, ATM], ATM -> wait -> User, Bank -> doCheck -> Bank, Bank -> checkOk -> ATM, ATM -> ok -> User], [User -> pwd -> ATM, ATM -> checkPwd -> Bank, Phi_2[ATM], Phi_1[Bank], Phi_3[Bank, ATM], Bank -> doCheck -> Bank, ATM -> wait -> User, Bank -> checkOk -> ATM, ATM -> ok -> User]]]]><![CDATA[>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at MTSSynthesis.ar.dc.uba.lsc.ChartTest.testTwoLinearisationsWithInteractionsAndConditionsB(ChartTest.java:466)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- testTwoLinearisationsWithInteractionsAndConditionsB on testTwoLinearisationsWithInteractionsAndConditionsB(MTSSynthesis.ar.dc.uba.lsc.ChartTest) -->
  <testcase name="testTwoLinearisationsSeveralConditionsBeginingChartWithInteractionsA on testTwoLinearisationsSeveralConditionsBeginingChartWithInteractionsA(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.003" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
  <testcase name="testTwoLinearisationsSeveralConditionsBeginingChartWithInteractionsB on testTwoLinearisationsSeveralConditionsBeginingChartWithInteractionsB(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
  <testcase name="testQtyInteractions on testQtyInteractions(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.005" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
  <testcase name="testOrderNotImportantForLinearisationOnlyInteractions on testOrderNotImportantForLinearisationOnlyInteractions(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
  <testcase name="testOrderNotImportantForLinearisationInteractionsAndConditions on testOrderNotImportantForLinearisationInteractionsAndConditions(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.001" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
  <testcase name="testTwoLinearisationsWithInteractionsAndConditions on testTwoLinearisationsWithInteractionsAndConditions(MTSSynthesis.ar.dc.uba.lsc.ChartTest)" time="0.0" classname="MTSSynthesis.ar.dc.uba.lsc.ChartTest"/>
</testsuite> <!-- Surefire test -->
